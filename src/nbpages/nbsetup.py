import os
import configparser
import datetime
import shutil

CONFIG_FILE = os.path.join("config", "config")

readme_template = """
[//]: # (DO NOT EDIT. README.md is generated by nbpages. Make changes to templates/README.md.jinja.)
# {{ page_title }}

{% for line in readme_toc -%}
{{ line }}
{% endfor %}
"""

notebook_header_template = """
*This notebook contains material from [{{ page_title }}]({{ page_url }});
content is available [on Github]({{ github_url }}).*
"""


def make_dir_if_needed(dir_name):
    """Create new directory if not present, and verify that it exists."""
    if not os.path.exists(dir_name):
        print(f"- creating {dir_name} directory")
        os.mkdir(dir_name)
    else:
        print(f"- {dir_name} directory already exists")
    assert os.path.exists(dir_name), f"{dir_name} directory not found in current working directory"


def write_template_if_needed(template_content, template_filename):
    """Create template file if needed, and verify that it exists."""
    fname = f"config/{template_filename}"
    if not os.path.isfile(fname):
        with open(fname, 'w') as f:
            print(f"- writing {fname}")
            f.write(template_content)
    else:
        print(f"- {fname} already exists")


def nbsetup():
    """Setup directories if needed with default configuration and templates."""

    # verify that a .git repository has been established
    assert os.path.exists('.git'), ".git subdirectory not found. "

    # create notebooks and template directories
    make_dir_if_needed("notebooks")
    make_dir_if_needed("config")
    #make_dir_if_needed("html")

    # create templates
    write_template_if_needed(notebook_header_template, 'notebook_header.jinja')
    write_template_if_needed(readme_template, 'README.md.jinja')

    # if needed, create default template/config from .git config

    print(f"- creating {CONFIG_FILE} from .git/config")
    if os.path.isfile(CONFIG_FILE):
        print("-checkpoiont backup of " + CONFIG_FILE)
        shutil.copy2(CONFIG_FILE, CONFIG_FILE + datetime.datetime.now().strftime(".backup-%Y%M%dT%H%M%S"))

    git_config = configparser.ConfigParser(strict=False)
    git_config.read(os.path.join(".git", "config"))

    github_url = git_config['remote "origin"']['url']
    github_user = github_url.rsplit('/')[-2]
    page_title = github_url.rsplit('/')[-1].split('.')[0]

    config = configparser.ConfigParser()
    config["NBPAGES"] = {"github_url": github_url,
                         "repository": f"{github_user}/{page_title}",
                         "page_title": page_title,
                         "page_url": f"https://{github_user}.github.io/{page_title}"
                         }
    with open(CONFIG_FILE, "w") as f:
        print("- writing " + CONFIG_FILE)
        config.write(f)


if __name__ == "__main__":
    nbsetup()