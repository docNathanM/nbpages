import os
import configparser
import datetime
import shutil

CONFIG_FILE = "nbpages.cfg"
TEMPLATES_DIR = "templates"

# verify a .git repository has been established
assert os.path.exists('.git'), ".git subdirectory not found. "
git_config = configparser.ConfigParser(strict=False)
git_config.read(os.path.join(".git", "config"))
github_repo_url = git_config['remote "origin"']['url']
github_user_name = github_repo_url.rsplit('/')[-2]
github_repo_name = github_repo_url.rsplit('/')[-1].split('.')[0]
github_pages_url = f"https://{github_user_name}.github.io/{github_repo_name}"

index_md_tpl = """
[//]: # (DO NOT EDIT index.md. index.md is generated by nbpages. Make changes to templates/index.md.tpl.)
# {{ page_title }}

{% for line in readme_toc -%}
{{ line }}
{% endfor %}
"""

notebook_header_tpl = """
*This notebook contains material from [{{ page_title }}]({{ page_url }});
content is available [on Github]({{ github_url }}).*
"""

nbpages_tpl = """
<!-- jinja2 template that extendes `full` to add cell tags in the html rendering of notebooks -->
{% extends 'full.tpl'%}
{% block any_cell %}
{% if cell['metadata'].get('tags', []) %}
    <div style="background-color:white; border:thin solid grey; margin-left:95px; margin-right:6px">
    {% for tag in cell['metadata'].get('tags', []) %}
        &nbsp; <a href="https://{github_user_name}.github.io/{github_repo_name}/tag_index.html#{{ tag }}">{{ tag }}</a>
    {% endfor %}
    </div>
    {{ super() }}
{% else %}
    {{ super() }}
{% endif %}
{% endblock any
"""

def make_dir_if_needed(dir_name):
    """Create new directory if not present and verify that it exists."""
    if not os.path.exists(dir_name):
        print(f"- creating {dir_name} directory")
        os.mkdir(dir_name)
    else:
        print(f"- {dir_name} directory already exists")
    assert os.path.exists(dir_name), f"{dir_name} directory not found in the current working directory"

def write_template_if_needed(template_content, template_filename):
    """Create template file if needed, and verify that it exists."""
    fname = os.path.join(TEMPLATES_DIR, template_filename)
    if not os.path.isfile(fname):
        with open(fname, 'w') as f:
            print(f"- writing {fname}")
            f.write(template_content)
    else:
        print(f"- {fname} already exists")

def nbsetup():
    """Setup directories if needed with default configuration and templates."""

    print(f"- creating {CONFIG_FILE} from .git/config")
    if os.path.isfile(CONFIG_FILE):
        config_file_backup = CONFIG_FILE + datetime.datetime.now().strftime(".backup-%Y%M%dT%H%M%S")
        print(f"- backing up {CONFIG_FILE} to {config_file_backup}")
        shutil.copy2(CONFIG_FILE, config_file_backup)

    config = configparser.ConfigParser()
    config["NBPAGES"] = {"github_repo_url": github_repo_url,
                         "github_user_name": github_user_name,
                         "github_repo_name": github_repo_name,
                         "github_pages_url": github_pages_url,
                         "repository": f"{github_user_name}/{github_repo_name}",
                         "page_title": github_repo_name,
                         "page_url": f"https://{github_user_name}.github.io/{github_repo_name}"
                         }
    with open(CONFIG_FILE, "w") as f:
        print("- writing " + CONFIG_FILE)
        config.write(f)

    # create notebooks and template directories
    make_dir_if_needed("notebooks")

    # create templates
    make_dir_if_needed("templates")
    write_template_if_needed(notebook_header_tpl, 'notebook_header.tpl')
    write_template_if_needed(index_md_tpl, 'index.md.tpl')
    write_template_if_needed(nbpages_tpl, 'nbpages.tpl')

    # create docs directory
    make_dir_if_needed("docs")
    if "index.md" not in os.listdir("docs"):
        print("- writing index.md to docs")
        with open(os.path.join("docs", "index.md"), "w") as f:
            f.write(f"# {github_repo_name}\n")
    return 0


if __name__ == "__main__":
    sys.exit(nbsetup())