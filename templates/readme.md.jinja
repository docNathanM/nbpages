
[//]: # (DO NOT EDIT. README.md IS GENERATED BY NBPAGES. MAKE CHANGES TO templates/README.md.jinja.)

# {{ page_title }}

{{ page_title }} is a command line tool for managing a github repository of Jupyter notebooks. The project was inspired
by the tools included with the [Python Data Science Handbook](https://github.com/jakevdp/PythonDataScienceHandbook) by
[Jake Vanderplas](https://github.com/jakevdp).

## Installation

    pip install nbpages

To upgrade a previously installed version to the latest version

    pip install nbpages --upgrade

## Setup

The `nbpages` package assumes you have created a public github repository containing one or more Jupyter notebooks in a
subdirectory named `notebooks`. The notebooks must be committed to a github repository before proceeding. Setup up
a github pages using the repository settings menu.

`nbpages` orders notebooks into a chapter/section heirarchy using a filename prefix. Included filenames must have an
`nn.mm-` prefix where`nn` refers to the chapter number or, if a letter, to an Appendix.
The second pair of digits `mm` refers to the section number. Section `00` is reserved to hold the chapter title and
any introductory material. The notebooks must also have the usual `.ipynb` suffix.

Once the notebook repository has been published on github, nbpages setup is performed with the command

    nbpages --setup

A directory named `templates` is created if one doesn't already exist.  A configuration file `config` is
created inside the directory using data read from the `.git`. Jinja templates `README.md.jinja` and
`notebook_header.jinja` are created if they don't already exist. These templates can be edited as required
using data fields defined in `config`.

## Normal Usage

Following setup, the normal use of `nbpages` is to execute the command line

    nbpages

from the top level directory of the notebook repository. Normally this command would be between completing edits or
additions to the notebooks and prior to a github commit. The command will

* add or amend headers and navigation bars in all notebooks,
* write a table of contents file
* write a keyword index
* write README.md using the template file

## Utilities

To help achieve a consistent style over a collection of notebooks, use the command

    nbpages --lint

to locate some forms of notebook 'lint'.  A current list of additional features can be found

    nbpages --help

[//]: # (The following template code is used to insert a list of notebook links.)

{% for line in readme_toc %}
{{ line }}
{% endfor %}
